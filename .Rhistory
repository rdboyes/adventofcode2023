strings = c("one"   = "1",
"two"   = "2",
"three" = "3",
"four"  = "4",
"five"  = "5",
"six"   = "6",
"seven" = "7",
"eight" = "8",
"nine"  = "9")
input |>
mutate(input = str_replace_all(input, strings))
input |>
mutate(input = str_replace_all(input, strings)) |>
solve()
input |>
mutate(input = str_replace_all(input, strings))
input
input |>
mutate(input = str_replace_all(input, strings)) |>
mutate(first_number = str_extract(input, "[0-9]"),
last_number = str_extract(input, "([0-9])[^0-9]*$", group = 1))
input |>
mutate(input = str_replace_all(input, strings)) |> solve()
input |>
mutate(input = str_replace_all(input, strings)) |>
mutate(input = str_replace_all(input, strings)) |> solve()
strings = rev(c("one"   = "1",
"two"   = "2",
"three" = "3",
"four"  = "4",
"five"  = "5",
"six"   = "6",
"seven" = "7",
"eight" = "8",
"nine"  = "9"))
input |>
mutate(input = str_replace_all(input, strings)) |>
solve()
strings = rev(c("one"   = "1",
"two"   = "2",
"three" = "3",
"four"  = "4",
"five"  = "5",
"six"   = "6",
"seven" = "7",
"eight" = "8",
"threeight" = "3",
"oneight" = "1",
"nine"  = "9",
"sevenine" = "7"))
input |>
mutate(input = str_replace_all(input, strings)) |>
solve()
strings = rev(c("one"   = "1",
"two"   = "2",
"three" = "3",
"four"  = "4",
"five"  = "5",
"six"   = "6",
"seven" = "7",
"eight" = "8",
"nine"  = "9"))
strings
names(strings)
}
solve <- function(input, digits = "0-9"){
input |>
mutate(first_number = str_extract(input, paste0("[", digits, "]")),
last_number = str_extract(input, paste0("([", digits, "])[^", digits, "]*$"), group = 1)) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
collapse(names(strings, "|"))
collapse(names(strings) "|")
collapse(names(strings), "|")
?collapse
?collect
?paste
paste(names(strings), collapse = "|")
solve(paste0("0-9|", paste(names(strings), collapse = "|"))
input |>
mutate(input = str_replace_all(input, strings)) |>
solve(paste0("0-9|", paste(names(strings), collapse = "|")))
solve <- function(input, digits = "0-9"){
input |>
mutate(first_number = str_extract(input, paste0("[", digits, "]")),
last_number = str_extract(input, paste0("([", digits, "])[^", digits, "]*$"), group = 1)) |>
mutate(across(first_number:last_number, ~str_replace_all, strings)) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
input |>
mutate(first_number = str_extract(input, paste0("[", digits, "]")),
last_number = str_extract(input, paste0("([", digits, "])[^", digits, "]*$"), group = 1))
digits = paste0("0-9|", paste(names(strings), collapse = "|"))
input |>
mutate(first_number = str_extract(input, paste0("[", digits, "]")),
last_number = str_extract(input, paste0("([", digits, "])[^", digits, "]*$"), group = 1))
input |>
mutate(input = str_replace_all(input, strings)) |>
solve(paste0("[0-9]|[", paste(names(strings), collapse = "]|["), "]"))
digits = paste0("[0-9]|[", paste(names(strings), collapse = "]|["), "]")
digits
input |>
mutate(first_number = str_extract(input, paste0("[", digits, "]")),
last_number = str_extract(input, paste0("([", digits, "])[^", digits, "]*$"), group = 1))
solve <- function(input, digits = "[0-9]"){
input |>
mutate(first_number = str_extract(input, digits)),
paste0("[0-9]|[", paste(names(strings), collapse = "]|["), "]")
paste0("[0-9]|", paste(names(strings), collapse = "|"))
digits = paste0("[0-9]|", paste(names(strings), collapse = "|"))
paste0("(", digits, "^", digits, "*$")
solve <- function(input, digits = "[0-9]"){
input |>
mutate(first_number = str_extract(input, digits)),
solve <- function(input, digits = "[0-9]"){
input |>
mutate(first_number = str_extract(input, digits),
last_number = str_extract(input, paste0("(", digits, ")[^", digits, "*$"), group = 1)) |>
mutate(across(first_number:last_number, ~str_replace_all, strings)) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
solve <- function(input, digits = "[0-9]"){
input |>
mutate(first_number = str_extract(input, digits),
last_number = str_extract(input, paste0("(", digits, ")[^", digits, "]*$"), group = 1)) |>
mutate(across(first_number:last_number, ~str_replace_all, strings)) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
solve <- function(input, digits = "[0-9]"){
input |>
mutate(first_number = str_extract(input, digits),
last_number = str_extract(input, paste0("(", digits, ")[^", digits, "]*$"), group = 1)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
input |>
mutate(input = str_replace_all(input, strings)) |>
solve(paste0("[0-9]|", paste(names(strings), collapse = "|"), "]"))
paste0("[0-9]|", paste(names(strings), collapse = "|"), "]")
paste0("[0-9]|", paste(names(strings), collapse = "|"))
digits = paste0("[0-9]|", paste(names(strings), collapse = "|"))
paste0("(", digits, ")[^", digits, "]*$")
digits = "[0-9]"
paste0("(", digits, ")[^", digits, "]*$")
solve <- function(input, r1 = "[0-9]", r2 = "([0-9])^[0-9]*$"){
input |>
mutate(first_number = str_extract(input, r1),
last_number = str_extract(input, r2, group = 1)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
solve <- function(input, r1 = "[0-9]", r2 = "([0-9])^[0-9]*$"){
input |>
mutate(first_number = str_extract(input, r1),
last_number = str_extract(input, r2, group = 1)) |>
#mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
r1 = "[0-9]", r2 = "([0-9])^[0-9]*$")
r1 = "[0-9]"
r2 = "([0-9])^[0-9]*$"
input |>
mutate(first_number = str_extract(input, r1),
last_number = str_extract(input, r2, group = 1))
solve <- function(input, r1 = "[0-9]", r2 = "([0-9])[^0-9]*$"){
input |>
mutate(first_number = str_extract(input, r1),
last_number = str_extract(input, r2, group = 1)) |>
#mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
solve <- function(input, r1 = "[0-9]", r2 = "([0-9])[^0-9]*$"){
input |>
mutate(first_number = str_extract(input, r1),
last_number = str_extract(input, r2, group = 1)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
input |>
mutate(input = str_replace_all(input, strings)) |>
solve(r1 = "[0-9]|nine|eight|seven|six|five|four|three|two|one",
r2 = "([0-9]|nine|eight|seven|six|five|four|three|two|one)[^[0-9|nine|eight|seven|six|five|four|three|two|one]*$")
input |>
mutate(input = str_replace_all(input, strings)) |>
solve(r1 = "[0-9]|nine|eight|seven|six|five|four|three|two|one",
r2 = "([0-9]|nine|eight|seven|six|five|four|three|two|one)[^0-9|nine|eight|seven|six|five|four|three|two|one]*$")
r1 = "[0-9]|nine|eight|seven|six|five|four|three|two|one"
r2 = "([0-9]|nine|eight|seven|six|five|four|three|two|one)[^0-9|nine|eight|seven|six|five|four|three|two|one]*$"
input |>
mutate(first_number = str_extract(input, r1),
last_number = str_extract(input, r2, group = 1))
r2 = "([0-9]|nine|eight|seven|six|five|four|three|two|one)[^0-9|nine|eight|seven|six|five|four|three|two|one]*$"
input |>
mutate(first_number = str_extract(input, r1),
last_number = str_extract(input, r2, group = 1))
r2 = "([0-9]|nine|eight|seven|six|five|four|three|two|one)[^[0-9|nine|eight|seven|six|five|four|three|two|one]]*$"
input |>
mutate(first_number = str_extract(input, r1),
last_number = str_extract(input, r2, group = 1))
digits = "[0-9]"
input |>
mutate(number = str_extract_all(input, digits)
)
pluck
}
}
solve <- function(input, digits = "[0-9]"){
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(combined = as.integer(paste0(pluck(number, 1), pluck(number, length(number))))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
?pluck
solve <- function(input, digits = "[0-9]"){
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(combined = as.integer(paste0(number[1], number[length(number)]))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
input |>
mutate(number = str_extract_all(input, digits) |>
mutate(first_number = map(number, first), last_number = map(number, last))
)
input
input |>
mutate(number = str_extract_all(input, digits)
digits = "[0-9]"
digits = "[0-9]"
input |>
mutate(number = str_extract_all(input, digits))
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(first_number = map(number, first), last_number = map(number, last))
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(first_number = map_int(number, first), last_number = map_int(number, last))
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(first_number = map_chr(number, first), last_number = map_chr(number, last))
solve <- function(input, digits = "[0-9]"){
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(first_number = map_chr(number, first), last_number = map_chr(number, last)) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
solve <- function(input, digits = "[0-9]"){
solve <- function(input, digits = "[0-9]"){
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(first_number = map_chr(number, first), last_number = map_chr(number, last)) |>
mutate(across(first_number:last_number, ~str_replace(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
strings = rev(c("one"   = "1",
"two"   = "2",
"three" = "3",
"four"  = "4",
"five"  = "5",
"six"   = "6",
"seven" = "7",
"eight" = "8",
"nine"  = "9"))
solve <- function(input, digits = "[0-9]"){
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(first_number = map_chr(number, first), last_number = map_chr(number, last)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
input |>
mutate(input = str_replace_all(input, strings)) |>
solve("[0-9]|nine|eight|seven|six|five|four|three|two|one")
input |>
solve("[0-9]|nine|eight|seven|six|five|four|three|two|one")
input |> solve(paste("[0-9]", names(strings), collapse = "|"))
paste("[0-9]", names(strings), collapse = "|")
input |> solve(paste0("[0-9]", paste(names(strings), collapse = "|")))
paste0("[0-9]", paste(names(strings), collapse = "|"))
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")))
digits = paste0("[0-9]|", paste(names(strings), collapse = "|"))
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(first_number = map_chr(number, first), last_number = map_chr(number, last)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings)))
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(first_number = map_chr(number, first), last_number = map_chr(number, last)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number)))
tibble(input = readlines("two1nine
eightwothree
abcone2threexyz
xtwone3four
4nineeightseven2
zoneight234
7pqrstsixteen"))
tibble(input = read_lines("two1nine
eightwothree
abcone2threexyz
xtwone3four
4nineeightseven2
zoneight234
7pqrstsixteen"))
tibble(input = read_lines("two1nine
eightwothree
abcone2threexyz
xtwone3four
4nineeightseven2
zoneight234
7pqrstsixteen"))
tibble(input = read_lines("two1nine
eightwothree
abcone2threexyz
xtwone3four
4nineeightseven2
zoneight234
7pqrstsixteen")) |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")))
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")))
solve <- function(input, digits = "[0-9]"){
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(first_number = map_chr(number, first), last_number = map_chr(number, last)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) #|>
#summarize(p1 = sum(combined)) |>
#pull()
}
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")))
solve <- function(input, digits = "[0-9]"){
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(first_number = map_chr(number, first), last_number = map_chr(number, last)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |> print(n = 100)
#summarize(p1 = sum(combined)) |>
#pull()
}
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")))
solve <- function(input, digits = "[0-9]"){
input |>
mutate(number = str_extract_all(input, digits)) |>
mutate(first_number = map_chr(number, first), last_number = map_chr(number, last)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |> slice(13)
#summarize(p1 = sum(combined)) |>
#pull()
}
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")))
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|"))) -> x
x
x["number"]
x$number
?str_extract_all
names(string)
names(strings)
str_reverse
rev("nine")
library(stringi)
solve <- function(input, r1 = "[0-9]", r2 = "[0-9]"){
input |>
mutate(first_number = str_extract(input, r1)) |>
mutate(last_number = str_extract(stri_reverse(input), r2)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number)))
#summarize(p1 = sum(combined)) |>
#pull()
}
input |> solve()
solve <- function(input, r1 = "[0-9]", r2 = "[0-9]"){
input |>
mutate(first_number = str_extract(input, r1)) |>
mutate(last_number = str_extract(stri_reverse(input), r2)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number)))
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
solve <- function(input, r1 = "[0-9]", r2 = "[0-9]"){
input |>
mutate(first_number = str_extract(input, r1)) |>
mutate(last_number = str_extract(stri_reverse(input), r2)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")))
solve <- function(input, r1 = "[0-9]", r2 = "[0-9]"){
input |>
mutate(first_number = str_extract(input, r1)) |>
mutate(last_number = str_extract(stri_reverse(input), r2)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number)))
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")),
)
solve <- function(input, r1 = "[0-9]", r2 = "[0-9]"){
input |>
mutate(first_number = str_extract(input, r1)) |>
mutate(last_number = str_extract(stri_reverse(input), r2)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number)))
#summarize(p1 = sum(combined)) |>
#pull()
}
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|"))
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|"))
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")))
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")),
paste0("[0-9]|", paste(str_reverse(names(strings)), collapse = "|")))
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")),
paste0("[0-9]|", paste(stri_reverse(names(strings)), collapse = "|")))
stri_reverse(names(strings))
strings_rev <- strings
names(strings_rev) <- stri_reverse(names_strings)
names(strings_rev) <- stri_reverse(names(strings))
strings_rev
solve <- function(input, r1 = "[0-9]", r2 = "[0-9]"){
input |>
mutate(first_number = str_extract(input, r1)) |>
mutate(last_number = str_extract(stri_reverse(input), r2)) |>
mutate(across(first_number:last_number, ~str_replace_all(., strings))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")),
paste0("[0-9]|", paste(stri_reverse(names(strings)), collapse = "|")))
solve <- function(input, r1 = "[0-9]", r2 = "[0-9]"){
input |>
mutate(first_number = str_extract(input, r1)) |>
mutate(last_number = str_extract(stri_reverse(input), r2)) |>
mutate(across(first_number:last_number, ~str_replace_all(., c(strings, strings_rev)))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")),
paste0("[0-9]|", paste(stri_reverse(names(strings)), collapse = "|")))
solve <- function(input, r1 = "[0-9]", r2 = "[0-9]"){
input |>
mutate(first_number = str_extract(input, r1)) |>
mutate(last_number = str_extract(stri_reverse(input), r2)) |>
mutate(across(first_number:last_number, ~str_replace_all(., c(strings, strings_rev)))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |> print(n = 50)
#summarize(p1 = sum(combined)) |>
#pull()
}
input |> solve()
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")),
paste0("[0-9]|", paste(stri_reverse(names(strings)), collapse = "|")))
solve <- function(input, r1 = "[0-9]", r2 = "[0-9]"){
input |>
mutate(first_number = str_extract(input, r1)) |>
mutate(last_number = str_extract(stri_reverse(input), r2)) |>
mutate(across(first_number:last_number, ~str_replace_all(., c(strings, strings_rev)))) |>
mutate(combined = as.integer(paste0(first_number, last_number))) |>
summarize(p1 = sum(combined)) |>
pull()
}
input |> solve()
input |> solve(paste0("[0-9]|", paste(names(strings), collapse = "|")),
paste0("[0-9]|", paste(stri_reverse(names(strings)), collapse = "|")))
paste0("[0-9]|", paste(names(strings),
collapse = "|")
)
